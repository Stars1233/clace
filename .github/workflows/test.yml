name: CI
on:
  push:
    branches:
      - "main"
      - "release-branch/*"
  pull_request:
    branches:
      - "*"
  merge_group:
    branches:
      - "main"

concurrency:
  # For PRs, later CI runs preempt previous ones. e.g. a force push on a PR
  # cancels running CI jobs and starts all new ones.
  #
  # For non-PR pushes, concurrency.group needs to be unique for every distinct
  # CI run we want to have happen. Use run_id, which in practice means all
  # non-PR CI runs will be allowed to run without preempting each other.
  group: ${{ github.workflow }}-$${{ github.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go-version: ["1.21.3"]

    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Test with Go
        run: go test ./...
      - name: Test CLI
        env:
          CL_INFOCLACE_SSH: ${{ secrets.CL_INFOCLACE_SSH }}
          CL_GITHUB_SECRET: ${{ secrets.CL_GITHUB_SECRET }}
        run: |
          export CL_HOME=`pwd`
          go install github.com/commander-cli/commander/v2/cmd/commander@latest
          tests/run_cli_tests.sh

      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: Go-results-${{ matrix.go-version }}
          path: TestResults-${{ matrix.go-version }}.json
