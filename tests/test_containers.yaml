config:
  env:
    CL_CONFIG_FILE: clace.toml
    HTTP_PORT: ${HTTP_PORT}
tests:
  container0010: # setup flask app
    command: rm -rf ./flaskapp && mkdir flaskapp && cp flask.py flaskapp/app.py
  container0020: # setup flask dev app
    command: ../clace app create --dev --spec python-flask --approve ./flaskapp /cont_flaskdev
  container0030: # setup flask prod app
    command: ../clace app create --spec python-flask --approve ./flaskapp /cont_flaskprod
  container0040: # check curl dev works
    command: curl -sS localhost:${HTTP_PORT}/cont_flaskdev
    stdout: "hello"
  container0050: # update app code
    command: perl -i -pe 's/"hello"/"updated"/g' flaskapp/app.py
  container0060: # check dev picked up change
    command: curl -sS localhost:${HTTP_PORT}/cont_flaskdev
    stdout: "updated"
  container0070: # stage is not yet updated
    command: curl -sS localhost:${HTTP_PORT}/cont_flaskprod_cl_stage
    stdout: "hello"
  container0080: # do reload
    command: ../clace app reload /cont_flaskprod
  container0090: # stage is updated
    command: curl -sS localhost:${HTTP_PORT}/cont_flaskprod_cl_stage
    stdout: "updated"
  container0100: # prod is not yet updated
    command: curl -sS localhost:${HTTP_PORT}/cont_flaskprod
    stdout: "hello"
  container0110: # do promote
    command: ../clace app promote /cont_flaskprod
  container0120: # prod is updated
    command: curl -sS localhost:${HTTP_PORT}/cont_flaskprod
    stdout: "updated"

  container0200: # setup streamlit app
    command: ../clace app create --spec python-streamlit --branch master --approve github.com/streamlit/streamlit-example /cont_streamlit
  container0210: # check stage
    command: curl -sS localhost:${HTTP_PORT}/cont_streamlit_cl_stage/_stcore/health
    stdout: ok
  container0220: # check prod
    command: curl -sS localhost:${HTTP_PORT}/cont_streamlit/_stcore/health
    stdout: ok

  container0300: # setup proxy
    command: ../clace app create --spec proxy --approve -param url=https://clace.io - /cont_proxy
  container0310: # check stage
    command: curl -sS localhost:${HTTP_PORT}/cont_proxy_cl_stage
    stdout: platform
  container0320: # check prod
    command: curl -sS localhost:${HTTP_PORT}/cont_proxy
    stdout: platform

  container0400: # setup nginx image
    command: ../clace app create --spec image --approve --param image=nginx --param port=80 - /cont_image_nginx
  container0410: # check stage
    command: curl -sS localhost:${HTTP_PORT}/cont_image_nginx_cl_stage
    stdout: Welcome to nginx
  container0420: # check prod
    command: curl -sS localhost:${HTTP_PORT}/cont_image_nginx
    stdout: Welcome to nginx
  container0430: # error check
    command: ../clace app create --spec image --approve --param image=nginx - /cont_image_error
    stderr: param port is a required param, a value has to be provided
    exit-code: 1
