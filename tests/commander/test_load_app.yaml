config:
  env:
    CL_CONFIG_FILE: clace.toml
tests:
  test0010: # copy sample app
    command: cp -r ../examples/disk_usage .
  test0020: # create dev app
    command: ../clace app create --is_dev /disk_usage_dev ./disk_usage
    stderr:
      line-count: 0
    stdout: "App audit results /disk_usage_dev : app"
    exit-code: 0
  test0030: # create prod app
    command: ../clace app create /disk_usage_prod ./disk_usage
    stderr:
      line-count: 0
    stdout: "App audit results /disk_usage_prod : app"
    exit-code: 0
  test0040: # test dev app
    command: curl -su "admin:qwerty" localhost:25222/disk_usage_dev
    stdout: "app /disk_usage_dev is not permitted to load plugin exec.in. Audit the app and approve permissions"
  test0041: # check audit output
    command: ../clace app audit /disk_usage_dev
    stdout:
      exactly: "App audit: /disk_usage_dev\n  Plugins :\n    exec.in\n  Permissions:\n    exec.in.run [du]\n    exec.in.run [readlink]\nApp permissions need to be approved...\n"
    exit-code: 0
  test0042: # approve audit
    command: ../clace app audit --approve /disk_usage_dev
    stdout:
      exactly: "App audit: /disk_usage_dev\n  Plugins :\n    exec.in\n  Permissions:\n    exec.in.run [du]\n    exec.in.run [readlink]\nApp permissions have been approved.\n"
    exit-code: 0
  test0043: # check curl after approval
    command: curl -su "admin:qwerty" localhost:25222/disk_usage_dev/
    stdout: "Disk Usage"
  test0044: # setup permission check, remove permissions entry from config
    command: cp ./disk_usage/app.star ./disk_usage/app.star.bk && grep -v "ace.permission" ./disk_usage/app.star > ./disk_usage/app.star.new && cp ./disk_usage/app.star.new ./disk_usage/app.star
  test0045: # check curl, still works since the old approvals with run are in place
    command: curl -su "admin:qwerty" localhost:25222/disk_usage_dev/
    stdout: "Disk Usage"
  test0046: # approve audit, no more run permissions
    command: ../clace app audit --approve /disk_usage_dev
    stdout:
      exactly: "App audit: /disk_usage_dev\n  Plugins :\n    exec.in\n  Permissions:\nApp permissions have been approved.\n"
    exit-code: 0
  test0047: # check curl
    command: curl -su "admin:qwerty" localhost:25222/disk_usage_dev
    stdout: "app /disk_usage_dev is not permitted to call exec.in.run. Audit the app and approve permissions"
  test0048: # update config
    command: cp ./disk_usage/app.star.bk ./disk_usage/app.star && perl -i -pe 's/\["du"\]/["cat"]/g' ./disk_usage/app.star
  test0049: # approve audit, run permissions but for cat instead of du
    command: ../clace app audit --approve /disk_usage_dev
    stdout:
      exactly: "App audit: /disk_usage_dev\n  Plugins :\n    exec.in\n  Permissions:\n    exec.in.run [cat]\n    exec.in.run [readlink]\nApp permissions have been approved.\n"
    exit-code: 0
  test0050: # check curl
    command: curl -su "admin:qwerty" localhost:25222/disk_usage_dev
    stdout: 'app /disk_usage_dev is not permitted to call exec.in.run with argument 0 having value "du", expected "readlink". Update the app or audit and approve permissions'
  test0051: # update config
    command: cp ./disk_usage/app.star.bk ./disk_usage/app.star
  test0052: # approve audit, run permissions but for du
    command: ../clace app audit --approve /disk_usage_dev
    stdout:
      exactly: "App audit: /disk_usage_dev\n  Plugins :\n    exec.in\n  Permissions:\n    exec.in.run [du]\n    exec.in.run [readlink]\nApp permissions have been approved.\n"
    exit-code: 0
  test0053: # check curl after approval
    command: curl -su "admin:qwerty" localhost:25222/disk_usage_dev/
    stdout: "Disk Usage"
  test0054: # check Vary header
    command: curl -vsu "admin:qwerty" localhost:25222/disk_usage_dev/static/gen/css/style.css 2>&1 | grep Vary
    stdout: "Vary: HX-Request"
    exit-code: 0
  #test0055: # check Response compression header
  #  command: curl -vsu "admin:qwerty" -H "Accept-Encoding:gzip" localhost:25222/disk_usage_dev/static/gen/css/style.css 2>&1 | grep "Content-Encoding"
  #  stdout: "Content-Encoding: gzip"
  #  exit-code: 0
  test0060: # audit prod app
    command: ../clace app audit --approve /disk_usage_prod
    stdout:
      exactly: "App audit: /disk_usage_prod\n  Plugins :\n    exec.in\n  Permissions:\n    exec.in.run [du]\n    exec.in.run [readlink]\nApp permissions have been approved.\n"
    exit-code: 0
  test0061: # test prod app
    command: curl -su "admin:qwerty" localhost:25222/disk_usage_prod/
    stderr:
      line-count: 0
    stdout: "Disk Usage"
    exit-code: 0
  test0070: # Update app code
    command: perl -pi -e 's/Disk Usage/DiskTest Usage/g' ./disk_usage/app.star && sleep 1
  test0080: # with --is_dev, changes are picked up immediately
    command: curl -su "admin:qwerty" localhost:25222/disk_usage_dev
    stderr:
      line-count: 0
    stdout: "DiskTest Usage"
  test0090: # without --is_dev, changes are not picked up
    command: curl -su "admin:qwerty" localhost:25222/disk_usage_prod
    stderr:
      line-count: 0
    stdout: "Disk Usage"
  test0100: # Create app with duplicate path
    command: ../clace app create /disk_usage_dev/ ./disk_usage
    stdout:
      line-count: 0
    stderr: "error: App already exists at /disk_usage_dev"
    exit-code: 1
  test0110: # Create app without granting approval
    command: ../clace app create /load1 ./disk_usage
    stdout: "App created. Permissions need to be approved"
    exit-code: 0
  test0120: # Create app, invalid path, app should not be created
    command: ../clace app create /load2 ./invalid
    stderr: "audit failed: error reading app.star file: file does not exist"
    exit-code: 1
  test0130: # Create app, granting approval
    command: ../clace app create --approve /load2 ./disk_usage
    stdout: "App created. Permissions have been approved"
    exit-code: 0

  # Test github load
  test0210: # Create app granting approval
    command: ../clace app create --approve /ghload1 github.com/claceio/clace/examples/disk_usage
    stdout: "App created. Permissions have been approved"
    exit-code: 0
  test0220: # test calling app
    command: curl -su "admin:qwerty" localhost:25222/ghload1/
    stderr:
      line-count: 0
    stdout: "Disk Usage"
  test0230: # Create app granting approval
    command: ../clace app create --approve /ghload2 https://github.com/claceio/clace/examples/disk_usage
    stdout: "App created. Permissions have been approved"
    exit-code: 0
  test0240: # Create app, invalid path
    command: ../clace app create --approve /ghload3 https://github.com/claceio/clace/examples/disk_usagebad
    stderr: "audit failed: error reading app.star file: file does not exist"
    exit-code: 1
  test0260: # Create app, invalid branch
    command: ../clace app create --approve --branch invalid /ghload3 https://github.com/claceio/clace/examples/disk_usage
    stderr: 'find remote ref "refs/heads/invalid"'
    exit-code: 1
  test0270: # Create app, valid branch
    command: ../clace app create --approve --branch main /ghload3 https://github.com/claceio/clace/examples/disk_usage
    stdout: "App created. Permissions have been approved"
    exit-code: 0
  test0280: # Create app, invalid commit id.
    command: ../clace app create --approve --commit invalid /ghload4 https://github.com/claceio/clace/examples/disk_usage
    stderr: "reference not found"
    exit-code: 1
  test0290: # Create app, valid commit id
    command: ../clace app create --approve --commit fdda2c5dce481bee052810ad300adc23a9a53170 /ghload5 https://github.com/claceio/clace/examples/disk_usage
    stdout: "App created. Permissions have been approved"
    exit-code: 0

  test0900: # cleanup
    command: rm -rf ./disk_usage || true
