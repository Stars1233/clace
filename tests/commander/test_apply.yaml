config:
  env:
    CL_CONFIG_FILE: openrun.toml
    GOCOVERDIR: ${GOCOVERDIR}/../client
    PATH: ${PATH}
tests:
  apply0001: ## setup
    command: rm -rf /tmp/testapp && cp -r ./testapp /tmp
    exit-code: 0
  apply0010: ## create all apps
    command: ../openrun apply ./apply_files/apply1.ace all
    stdout: "4 app(s) created, 0 app(s) updated, 0 app(s) reloaded, 0 app(s) skipped, 0 app(s) approved, 0 app(s) promoted."
  apply0011:
    command: ../openrun param update --promote p3new val /applytest/app4
  apply0012:
    command: ../openrun app update copt --promote co3='[5,6]' /applytest/app4
    exit-code: 0
  apply0013:
    command: ../openrun app update cvol --promote "v1:/abc" v2 v3 /applytest/app4
    exit-code: 0
  apply0020: ## apply update
    command: ../openrun apply --reload=updated ./apply_files/apply2.ace
    stdout: "0 app(s) created, 1 app(s) updated, 1 app(s) reloaded, 0 app(s) skipped, 0 app(s) approved, 0 app(s) promoted."
  apply0030: ## verify state
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.param_values | length'
    stdout:
      exactly: "2"
  apply0031:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.param_values.p2'
    stdout:
      exactly: '"{\"k\":1}"'
  apply0032:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.param_values.p3new'
    stdout:
      exactly: '"val"'
  apply0033:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.container_options.co3'
    stdout:
      exactly: '"[5,6]"'
  apply0034:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.container_options.co2'
    stdout:
      exactly: '"[\"aa\"]"'
  apply0035:
    command: ../openrun app list -i -f json /applytest/app4 | jq -c '.[1].metadata.container_volumes'
    stdout:
      exactly: '["v1:/abc","v3","v4"]'

  apply0040: ## Force apply new config apply2 for one app (cli updates are overwritten)
    command: ../openrun apply --clobber ./apply_files/apply2.ace /applytest/app4
    stdout: "0 app(s) created, 1 app(s) updated, 1 app(s) reloaded, 0 app(s) skipped, 0 app(s) approved, 0 app(s) promoted."

  apply0050: ## verify state
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.param_values | length'
    stdout:
      exactly: "1"
  apply0051:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.param_values.p2'
    stdout:
      exactly: '"{\"k\":1}"'
  apply0052:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.container_options | length'
    stdout:
      exactly: "2"
  apply0053:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.container_options.co2'
    stdout:
      exactly: '"[\"aa\"]"'
  apply0054:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.container_options.co1'
    stdout:
      exactly: '"2"'
  apply0055:
    command: ../openrun app list -i -f json /applytest/app4 | jq -c '.[1].metadata.container_volumes'
    stdout:
      exactly: '["v1:/abc","v4"]'

  apply0060: ## revert change
    command: ../openrun version switch previous /applytest/app4_cl_stage
    exit-code: 0
  apply0061: ## verify state
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.param_values | length'
    stdout:
      exactly: "2"
  apply0062:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.container_options.co3'
    stdout:
      exactly: '"[5,6]"'
  apply0063: ## Force update app3
    command: ../openrun apply --clobber ./apply_files/apply2.ace /applytest/app3
    stdout: "0 app(s) created, 1 app(s) updated, 1 app(s) reloaded, 0 app(s) skipped, 0 app(s) approved, 0 app(s) promoted."
  apply0064:
    command: ../openrun version list /applytest/app3_cl_stage | wc -l
    stdout:
      exactly: "3"
  apply0065:
    command: ../openrun version list /applytest/app3 | wc -l
    stdout:
      exactly: "2"

  apply0066: ## Promote change, with no reload
    command: ../openrun apply --clobber --promote --reload=none ./apply_files/apply2.ace /applytest/app3
    stdout: "0 app(s) created, 2 app(s) updated, 0 app(s) reloaded, 0 app(s) skipped, 0 app(s) approved, 1 app(s) promoted."
  apply0067:
    command: ../openrun version list /applytest/app3_cl_stage | wc -l
    stdout:
      exactly: "4"
  apply0068:
    command: ../openrun version list /applytest/app3 | wc -l
    stdout:
      exactly: "3"
  apply0069: ## Reset state
    command: ../openrun apply --clobber --promote ./apply_files/apply2.ace all
    stdout: "0 app(s) created, 2 app(s) updated, 7 app(s) reloaded, 0 app(s) skipped, 0 app(s) approved, 3 app(s) promoted."
  apply0070: ## Check reload all with promote
    command: ../openrun apply --promote ./apply_files/apply2.ace all
    stdout: "0 app(s) created, 0 app(s) updated, 7 app(s) reloaded, 0 app(s) skipped, 0 app(s) approved, 3 app(s) promoted."
  apply0071: ## Check reload all without promote
    command: ../openrun apply ./apply_files/apply2.ace all
    stdout: "0 app(s) created, 0 app(s) updated, 4 app(s) reloaded, 0 app(s) skipped, 0 app(s) approved, 0 app(s) promoted."

  apply0080: ## Setup fresh apply
    command: ../openrun app delete /applytest/app4
    exit-code: 0
  apply0081: ## create app
    command: ../openrun app create --approve /tmp/testapp /applytest/app4
    exit-code: 0
  apply0082: ## Apply new config apply2 for one app (cli updates are overwritten)
    command: ../openrun apply ./apply_files/apply2.ace /applytest/app4
    stdout: "0 app(s) created, 1 app(s) updated, 1 app(s) reloaded, 0 app(s) skipped, 0 app(s) approved, 0 app(s) promoted."

  apply0090: ## verify state
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.param_values | length'
    stdout:
      exactly: "1"
  apply0091:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.param_values.p2'
    stdout:
      exactly: '"{\"k\":1}"'
  apply0092:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.container_options | length'
    stdout:
      exactly: "2"
  apply0093:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.container_options.co2'
    stdout:
      exactly: '"[\"aa\"]"'
  apply0094:
    command: ../openrun app list -i -f json /applytest/app4 | jq '.[1].metadata.container_options.co1'
    stdout:
      exactly: '"2"'
  apply0095:
    command: ../openrun app list -i -f json /applytest/app4 | jq -c '.[1].metadata.container_volumes'
    stdout:
      exactly: '["v1:/abc","v4"]'
